/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library

apply plugin: 'java'
apply plugin: 'osgi'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    mavenLocal()
    mavenCentral()
}

ext {
    camelVersion = '2.17.0.redhat-630187'
    jboss_fuse_location_local='D:/development/jboss-fuse-karaf-6.3.0.redhat-187_test/jboss-fuse-6.3.0.redhat-187'
} 

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    compile "org.apache.camel:camel-core:${camelVersion}"
    compile "org.apache.camel:camel-blueprint:${camelVersion}"
    compile "org.apache.camel:camel-jetty:${camelVersion}"
    compile "org.apache.camel:camel-amqp:${camelVersion}"
    compile "org.apache.camel:camel-jackson:${camelVersion}"
    compile "org.apache.camel:camel-xstream:${camelVersion}"


    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation "org.codehaus.jackson:jackson-mapper-asl:1.9.12"
}

jar {
    	manifest { // the manifest of the default jar is of type OsgiManifest
        name = 'BankReportSystem'
        //instruction 'Private-Package',
        //        'org.mycomp.package1',
        //        'org.mycomp.package2'
        instruction 'Bundle-Vendor', 'Estafet'
        instruction 'Bundle-Description', 'Platform2: Metrics 2 Measures Framework'
        instruction 'Bundle-DocURL', 'http://www.estafet.com'
        instruction 'Bundle-SymbolicName', '${project.name}'
        instruction 'Import-Package' '*', 'org.apache.camel.osgi' 
    }
}

 task deployLocallyInFuse (dependsOn: [build]) {
        doLast {
            copy {
                from(jar)
                into project.file("${jboss_fuse_location_local}/deploy")
            }
        }
    }

